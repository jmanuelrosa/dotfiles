# Ansible role to install all packages related to arch system
# Author: Jose Manuel Rosa <jmanuelrosa@duck.com> (https://jmanuelrosa.dev)
---

- name: Load global variables
  include_vars: vars/global.yml

- name: Creating user config directory
  ansible.builtin.file:
    path: "{{ HOME }}/.config"
    state: directory

# Install global packages depending on the platform
- block:
    - name: Install all global packages
      ansible.builtin.shell: yay --quiet --sync --noconfirm --removemake {{ item }}
      loop: "{{ SYSTEM_APPS }}"
      register: result
      ignore_errors: true
      changed_when:
        - result.failed
  when:
    - ansible_os_family != 'Windows'
    - ansible_os_family != 'Darwin'

- block:
    - name: Install all global packages
      ansible.builtin.shell: brew install {{ item }}
      loop: "{{ SYSTEM_APPS }}"
      register: result
      ignore_errors: true
      changed_when:
        - result.failed
  when: ansible_os_family == 'Darwin'

# Install local packages depending on the platform
- block:
    - name: Load system variables
      include_vars: vars/linux.yml

    - name: Install all packages related to the system
      ansible.builtin.shell: yay --quiet --sync --noconfirm --removemake {{ item }}
      loop: "{{ SYSTEM_APPS }}"
      register: result
      ignore_errors: true
      changed_when:
        - result.failed

    - name: Install bluetooth packages
      ansible.builtin.shell: yay --quiet --sync --noconfirm --removemake {{ item }}
      loop: "{{ BLUETOOTH_APPS }}"
      register: result
      ignore_errors: true
      changed_when:
        - result.failed

    - name: Install pipewire audio system
      ansible.builtin.shell: yay --quiet --sync --noconfirm --removemake {{ item }}
      loop: "{{ AUDIO_LIBS }}"
      register: result
      ignore_errors: true
      changed_when:
        - result.failed

  when:
    - ansible_os_family != 'Windows'
    - ansible_os_family != 'Darwin'

- block:
    - name: Load system variables
      include_vars: vars/mac.yml

    - name: Install all packages related to the system
      ansible.builtin.shell: brew install {{ item }}
      loop: "{{ SYSTEM_APPS }}"
      register: result
      ignore_errors: true
      changed_when:
        - result.failed
  when: ansible_os_family == 'Darwin'
